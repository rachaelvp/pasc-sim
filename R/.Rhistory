View(reg.coefs)
names(reg.coefs) <- c("reg.b0i","reg.b1i","id")
est.betai <- merge(est.betai,reg.coefs,by="id",all=T)
View(est.betai)
est.betai[25:35,]
reg.coefs <- coefficients(reg.fit)
View(reg.coefs)
unqiue(dat3$id)
unique(dat3$id)
View(dat3)
tst <- dat3 %>% group_by(id) %>% mutate(nbyid = count( na.omit(cd4*log10VL)))
help("mutate")
tst <- dat3 %>% group_by(id) %>% summarise(nbyid = sum(is.na(cd4)))
View(tst)
help(ungroup)
tst <- dat3 %>% group_by(id) %>% summarise(nbyid = sum(is.na(cd4))) %>%
ungroup
View(tst)
nonmiss <- dat3 %>% group_by(id) %>% summarise(nbyid = sum(is.na(cd4)))
View(nonmiss)
nonmiss <- dat3 %>% group_by(id) %>% summarise(nbyid = sum(is.na(cd4)))
est.betai <- merge(est.betai,nonmiss, by="id",all=T)
View(est.betai)
dat3[dat3$id==37,]
lm(cd4~log10VL,dat=dat3,subset=id==37,na.action=na.omit)
nonmiss <- dat3 %>% group_by(id) %>% summarise(nbyid = sum(!is.na(cd4)))
View(nonmiss)
est.betai<-ranef(lme_3)[[1]]
id <- as.numeric(rownames(est.betai))
est.betai <- data.frame(id,est.betai)
names(est.betai) <- c("id","beta0i","beta1i")
est.betai[1:10,]
reg.fit <- lmList(cd4 ~ log10VL | id, data = dat3,na.action=na.omit)
# get the coefficients for each id
reg.coefs <- coefficients(reg.fit)
reg.coefs <- mutate(reg.coefs, id = as.integer(row.names(reg.coefs)))
names(reg.coefs) <- c("reg.b0i","reg.b1i","id")
# Merge to data with random effect estimates
est.betai <- merge(est.betai,reg.coefs,by="id",all=T)
est.betai[25:35,]
nonmiss <- dat3 %>% group_by(id) %>% summarise(nbyid = sum(!is.na(cd4)))
est.betai <- merge(est.betai,nonmiss, by="id",all=T)
View(est.betai)
lm(cd4~log10VL,dat=dat3,subset=id==12,na.action=na.omit)
dat3[dat3$id==12,]
est.betai[est.betai$id==12,]
dat3[dat3$id==12,]
hist(est.betai$nbyid,xlab="n obs",main="Nonmissing obsveration dist")
par(mfrow=c(1,2))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates")
hist(est.betai$reg.b0i,xlab="beta0i",main="LR by ID Estimates")
range(na.omit(est.betai$beta0i))
range(na.omit(est.betai$reg.b0i))
help("hist")
par(mfrow=c(1,2))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates")
hist(est.betai$reg.b0i[est.betai$reg.b0i > -500 & est.betai$reg.b0i < 1200],xlab="beta0i",main="LR by ID Estimates")
par(mfrow=c(2,1))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates")
hist(est.betai$reg.b0i[est.betai$reg.b0i > -500 & est.betai$reg.b0i < 1200],xlab="beta0i",main="LR by ID Estimates")
par(mfrow=c(2,1))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates",ylim=c(0,150))
hist(est.betai$reg.b0i[est.betai$reg.b0i > -500 & est.betai$reg.b0i < 1200],xlab="beta0i",main="LR by ID Estimates",ylim=c(0,150))
summary(lme_3)
plot(est.betai$beta0i,est.betai$reg.b0i,xlim=c(-500,1200),xlab="EB b0i",ylab="LR b0i",main="")
par(mfrow=c(1,1))
plot(est.betai$beta0i,est.betai$reg.b0i,xlim=c(-500,1200),xlab="EB b0i",ylab="LR b0i",main="")
help(plot)
par(mfrow=c(1,1))
ggplot(est.betai%>%subset(reg.b0i > -500 & reg.b0i < 1200),aes(x=beta0i,y=reg.b0i)) %>%geom_point()
ggplot(data=est.betai%>%subset(reg.b0i > -500 & reg.b0i < 1200),aes(x=beta0i,y=reg.b0i)) %>%geom_point()
est.betai %>% subset(reg.b0i > -500 & reg.b0i < 1200)
dim(est.betai %>% subset(reg.b0i > -500 & reg.b0i < 1200) )
ggplot(data=est.betai %>% subset(reg.b0i > -500 & reg.b0i < 1200),aes(x=beta0i,y=reg.b0i))+geom_point()
ggplot(data=est.betai %>% subset(reg.b0i > -500 & reg.b0i < 1200),aes(x=beta0i,y=reg.b0i))+geom_point()+geom_abline(0,1)
ggplot(data=est.betai %>% subset(reg.b0i > -500 & reg.b0i < 1200),aes(x=beta0i,y=reg.b0i))+geom_point()+
geom_abline(intercept=0,slope=1)
summary(est.betai$nbyid)
ggplot(data=est.betai %>% subset(reg.b0i > -500 & reg.b0i < 1200 & nbyid > 20),aes(x=beta0i,y=reg.b0i))+geom_point()+
geom_abline(intercept=0,slope=1)
fixed.coefs <- fixed(lme_3)
coef((lme_3))
est.betai<-coef(lme_3)
names(est.betai)
est.betai$id
est.betai<-coef(lme_3)$id
View(est.betai)
id <- as.numeric(rownames(est.betai))
est.betai <- data.frame(id,est.betai)
names(est.betai) <- c("id","beta0i","beta1i")
est.betai[1:10,]
reg.fit <- lmList(cd4 ~ log10VL | id, data = dat3,na.action=na.omit)
# get the coefficients for each id
reg.coefs <- coefficients(reg.fit)
reg.coefs <- mutate(reg.coefs, id = as.integer(row.names(reg.coefs)))
names(reg.coefs) <- c("reg.b0i","reg.b1i","id")
# Merge to data with random effect estimates
est.betai <- merge(est.betai,reg.coefs,by="id",all=T)
est.betai[25:35,]
nonmiss <- dat3 %>% group_by(id) %>% summarise(nbyid = sum(!is.na(cd4)))
est.betai <- merge(est.betai,nonmiss, by="id",all=T)
est.betai[est.betai$id==12,]
dat3[dat3$id==12,]
nonmiss <- dat3 %>% group_by(id) %>% summarise(nbyid = sum(!is.na(cd4) & !is.na(log10VL)))
View(nonmiss)
est.betai<-coef(lme_3)$id
id <- as.numeric(rownames(est.betai))
est.betai <- data.frame(id,est.betai)
names(est.betai) <- c("id","beta0i","beta1i")
est.betai[1:10,]
# Perform regression by id
reg.fit <- lmList(cd4 ~ log10VL | id, data = dat3,na.action=na.omit)
# get the coefficients for each id
reg.coefs <- coefficients(reg.fit)
reg.coefs <- mutate(reg.coefs, id = as.integer(row.names(reg.coefs)))
names(reg.coefs) <- c("reg.b0i","reg.b1i","id")
# Merge to data with random effect estimates
est.betai <- merge(est.betai,reg.coefs,by="id",all=T)
est.betai[25:35,]
nonmiss <- dat3 %>% group_by(id) %>% summarise(nbyid = sum(!is.na(cd4) & !is.na(log10VL)))
est.betai <- merge(est.betai,nonmiss, by="id",all=T)
est.betai[est.betai$id==12,]
dat3[dat3$id==12,]
hist(est.betai$nbyid,xlab="n obs",main="Nonmissing obsveration dist")
par(mfrow=c(2,1))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates",ylim=c(0,150))
# Limit range below due to huge outliers
hist(est.betai$reg.b0i[est.betai$reg.b0i > -500 & est.betai$reg.b0i < 1200],xlab="beta0i",main="LR by ID Estimates",ylim=c(0,150))
par(mfrow=c(2,1))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates",ylim=c(-150,1500))
# Limit range below due to huge outliers
hist(est.betai$reg.b0i[est.betai$reg.b0i > -500 & est.betai$reg.b0i < 1200],xlab="beta0i",main="LR by ID Estimates",ylim=c(-150,1500))
par(mfrow=c(2,1))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates",ylim=c(-150,1500))
# Limit range below due to huge outliers
hist(est.betai$reg.b0i[est.betai$reg.b0i > -150 & est.betai$reg.b0i < 1200],xlab="beta0i",main="LR by ID Estimates",ylim=c(-150,1500))
par(mfrow=c(2,1))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates",xlim=c(-150,1500))
# Limit range below due to huge outliers
hist(est.betai$reg.b0i[est.betai$reg.b0i > -150 & est.betai$reg.b0i < 1200],xlab="beta0i",main="LR by ID Estimates",xlim=c(-150,1500))
par(mfrow=c(2,1))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates",xlim=c(-150,1500),ylim=c(0,140))
# Limit range below due to huge outliers
hist(est.betai$reg.b0i[est.betai$reg.b0i > -150 & est.betai$reg.b0i < 1200],xlab="beta0i",main="LR by ID Estimates",xlim=c(-150,1500),ylim=c(0,140))
par(mfrow=c(2,1))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates",xlim=c(-150,1500),ylim=c(0,140),breaks=seq(0,1500,50))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates",xlim=c(-150,1500),ylim=c(0,140),breaks=seq(0,1550,50))
range(na.omit(est.betai$beta0i))
par(mfrow=c(2,1))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates",xlim=c(-150,1500),ylim=c(0,140),breaks=seq(0,1650,50))
par(mfrow=c(2,1))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates",xlim=c(-150,1500),ylim=c(0,140),breaks=seq(0,1650,50))
# Limit range below due to huge outliers
hist(est.betai$reg.b0i[est.betai$reg.b0i > -150 & est.betai$reg.b0i < 1200],xlab="beta0i",main="LR by ID Estimates",xlim=c(-150,1500),ylim=c(0,140),breaks=seq(0,1650,50))
par(mfrow=c(2,1))
hist(est.betai$beta0i,xlab="beta0i",main="EB Estimates",xlim=c(-150,1500),ylim=c(0,140),breaks=seq(0,1650,50))
# Limit range below due to huge outliers
hist(est.betai$reg.b0i[est.betai$reg.b0i > 0 & est.betai$reg.b0i < 1200],xlab="beta0i",main="LR by ID Estimates",xlim=c(-150,1500),ylim=c(0,140),breaks=seq(0,1650,50))
par(mfrow=c(1,1))
ggplot(data=est.betai %>% subset(reg.b0i > 0 & reg.b0i < 1200),aes(x=beta0i,y=reg.b0i))+geom_point()+
geom_abline(intercept=0,slope=1)
ggplot(data=est.betai %>% subset(reg.b0i > 0 & reg.b0i < 1200 & nbyid > 20),aes(x=beta0i,y=reg.b0i))+geom_point()+
geom_abline(intercept=0,slope=1)
plot(est.betai$beta0i,est.betai$reg.b0i,xlim=c(-500,1200),xlab="EB b0i",ylab="LR b0i",main="")
ggplot(data=est.betai %>% subset(reg.b0i > 0 & reg.b0i < 1200 & nbyid > 20),aes(x=beta0i,y=reg.b0i))+geom_point()+
geom_abline(intercept=0,slope=1)
g2 <- ggplot(data=est.betai %>% subset(reg.b0i > 0 & reg.b0i < 1200 & nbyid > 20),aes(x=beta0i,y=reg.b0i))+geom_point()+
geom_abline(intercept=0,slope=1)+ggtitle("Only Those ID's with > 20 non-missing observations")
g2
library(cowplot)
help(cowplot)
plot_grid(g1,g2)
g1 <- ggplot(data=est.betai %>% subset(reg.b0i > 0 & reg.b0i < 1200),aes(x=beta0i,y=reg.b0i))+geom_point()+
geom_abline(intercept=0,slope=1)
## Do only among id's with large numbers of observations
g2 <- ggplot(data=est.betai %>% subset(reg.b0i > 0 & reg.b0i < 1200 & nbyid > 20),aes(x=beta0i,y=reg.b0i))+geom_point()+
geom_abline(intercept=0,slope=1)+ggtitle("Only Those ID's with > 20 non-missing observations")
plot_grid(g1,g2)
help(ggtitle)
g1 <- ggplot(data=est.betai %>% subset(reg.b0i > 0 & reg.b0i < 1200),aes(x=beta0i,y=reg.b0i))+geom_point()+
geom_abline(intercept=0,slope=1)
## Do only among id's with large numbers of observations
g2 <- ggplot(data=est.betai %>% subset(reg.b0i > 0 & reg.b0i < 1200 & nbyid > 20),aes(x=beta0i,y=reg.b0i))+geom_point()+
geom_abline(intercept=0,slope=1)+labs(caption="Only Those ID's with > 20 non-missing observations")
plot_grid(g1,g2)
View(est.betai)
g1 <- ggplot(est.betai %>% subset(beta0i > 0 & reg.b0i > 0 & beta10 < 1600 & reg.b0i < 1600, aes(x=beta0i))+geom_histogram()
)
g1 <- ggplot(est.betai %>% subset(beta0i > 0 & reg.b0i > 0 & beta10 < 1600 & reg.b0i < 1600), aes(x=beta0i))+geom_histogram()
g1 <- ggplot(est.betai %>% subset(beta0i > 0 & reg.b0i > 0 & beta0i < 1600 & reg.b0i < 1600), aes(x=beta0i))+geom_histogram()
g1
g2 <- ggplot(est.betai %>% subset(beta0i > 0 & reg.b0i > 0 & beta0i < 1600 & reg.b0i < 1600), aes(x=reg.b0i))+geom_histogram()
g2
g1 <- ggplot(est.betai %>% subset(beta0i > 0 & reg.b0i > 0 & beta0i < 1600 & reg.b0i < 1600), aes(x=beta0i))+geom_histogram()+ylim(0,55)
g2 <- ggplot(est.betai %>% subset(beta0i > 0 & reg.b0i > 0 & beta0i < 1600 & reg.b0i < 1600), aes(x=reg.b0i))+geom_histogram()+ylim(0,55)
g1
g2
plot_grid(g1,g2)
var(est.betai$beta0i,na.rm=T)
round(var(est.betai$beta0i,na.rm=T),2)
round(var(est.betai$reg.b0i,na.rm=T),2)
setwd("~/UC Berkeley Biostat Dropbox/Alan Hubbard/hubbardlap/Longitudinal 2023 Dropbox/Lectures/Supporting R files")
dat=read_csv("leptoTimeSeries.csv")
# This bit of code lets you set the font size
# in heading of code junk when writing to beamer.
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE,echo = TRUE, fig.pos = 'h')
knitr::knit_hooks$set(mysize = function(before, options, envir) {
if (before)
return(options$size)
})
library(dplyr)
library(tidyverse)
library(tidyr)
# Package for dates
library(lubridate)
# Time series functions
library(tseries)
# Arimax models
library(TSA)
# Auto Arimax package
library(forecast)
dat=read_csv("leptoTimeSeries.csv")
## Look at data
tbl_df(dat)
## Get number of observations per person
dat <- dat%>% mutate(sys.date=dmy(date))
p <- ggplot(dat,aes(x=sys.date))
p <- p + geom_line(aes(y=dat$NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = dat$PLUV/20, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*20, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day")
p
dat.sht <- subset(dat,cal_year==1997 & month <=4)
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=dat.sht$NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = dat.sht$PLUV/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day")
p
dat <- dat %>% mutate(lagrain = lag(PLUV,4))
dat[1:10,c("sys.date","PLUV","lagrain")]
dat.sht <- subset(dat,cal_year==1997 & month <=4)
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=dat.sht$NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = dat.sht$PLUV/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day")
p
View(dat)
dat.sht <- subset(dat,cal_year==1997 & month <=4)
View(dat.sht)
library(cowplot)
dat.sht <- subset(dat,cal_year==1997 & month <=4)
## Plot lagged rain
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=dat.sht$NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = dat.sht$lagrain/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall 4 days previously"))
p <- p + labs(y = "Number Cases",
x = "Day")
p1 <- p
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=dat.sht$NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = dat.sht$pluv/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day")
p2 <- p
plot_grid(p1,p2)
p1
p2
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=dat.sht$NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = dat.sht$PLUV/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day")
p2 <- p
plot_grid(p1,p2)
View(p1)
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=dat.sht$NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = dat.sht$PLUV/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day") +
theme(legend.position="none")
p2 <- p
plot_grid(p1,p2)
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=dat.sht$NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = dat.sht$lagrain/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall 4 days previously"))
p <- p + labs(y = "Number Cases",
x = "Day")+
theme(legend.position="none")
p1 <- p
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=dat.sht$NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = dat.sht$PLUV/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day") +
theme(legend.position="none")
p2 <- p
plot_grid(p1,p2)
dat.sht <- dat
dat.sht <- subset(dat,cal_year==1997 & month <=4)
## Plot lagged rain
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=dat.sht$NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = dat.sht$lagrain/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall 4 days previously"))
p <- p + labs(y = "Number Cases",
x = "Day")+
theme(legend.position="none")
p1 <- p
p1
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=dat.sht$NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = dat.sht$PLUV/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day") +
theme(legend.position="none")
p2 <- p
p2
plot_grid(p1,p2)
p <- ggplot(dat,aes(x=sys.date))
p <- p + geom_line(aes(y=NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = lagrain/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall 4 days previously"))
p <- p + labs(y = "Number Cases",
x = "Day")+
theme(legend.position="none")
p1 <- p
p1
p <- ggplot(dat,aes(x=sys.date))
p <- p + geom_line(aes(y=NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = PLUV/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day") +
theme(legend.position="none")
p2 <- p
plot_grid(p1,p2)
View(dat)
View(dat)
View(dat)
dat.sht <- subset(dat,cal_year==1998)
## Plot lagged rain
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = lagrain/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall 4 days previously"))
p <- p + labs(y = "Number Cases",
x = "Day")+
theme(legend.position="none")
p1 <- p
p1
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = PLUV/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day") +
theme(legend.position="none")
p2 <- p
plot_grid(p1,p2)
p <- ggplot(dat,aes(x=lagrain, y=NCASES1))+
geom_point()
p
p <- ggplot(dat,aes(x=lagrain, y=NCASES1))+
geom_point()+geom_smooth()
p
p <- ggplot(dat,aes(x=lagrain, y=NCASES1))+
geom_point()+geom_smooth()+
labs(y = "Number Cases",
x = "Rain lagged by 4 days")
p
p <- ggplot(dat,aes(x=PLUV, y=NCASES1))+
geom_point()+geom_smooth()+
labs(y = "Number Cases",
x = "Rain (unlagged)")
p2 <- p
p2
plot_grid(p1,p2)
p <- ggplot(dat,aes(x=lagrain, y=NCASES1))+
geom_point()+geom_smooth()+
labs(y = "Number Cases",
x = "Rain lagged by 4 days")
p1 <- p
p <- ggplot(dat,aes(x=PLUV, y=NCASES1))+
geom_point()+geom_smooth()+
labs(y = "Number Cases",
x = "Rain (unlagged)")
p2 <- p
plot_grid(p1,p2)
dat.sht <- subset(dat,cal_year==1998)
## Plot lagged rain
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = lagrain/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall 4 days previously"))
p <- p + labs(y = "Number Cases",
x = "Day")+
theme(legend.position="none")
p1 <- p
# Without lag
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = PLUV/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day") +
theme(legend.position="none")
p2 <- p
plot_grid(p1,p2)
dat=read_csv("leptoTimeSeries.csv")
## Look at data
tbl_df(dat)
## Get number of observations per person
dat <- dat%>% mutate(sys.date=dmy(date))
p <- ggplot(dat,aes(x=sys.date))
p <- p + geom_line(aes(y=dat$NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = dat$PLUV/20, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*20, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day")
p
dat <- dat%>% mutate(sys.date=dmy(date))
p <- ggplot(dat,aes(x=sys.date))
p <- p + geom_line(aes(y=NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = PLUV/20, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*20, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day")
p
dat <- dat %>% mutate(lagrain = lag(PLUV,10))
dat[1:10,c("sys.date","PLUV","lagrain")]
dat <- dat %>% mutate(lagrain = lag(PLUV,10))
dat[1:15,c("sys.date","PLUV","lagrain")]
dat.sht <- subset(dat,cal_year==1998)
## Plot lagged rain
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = lagrain/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall 10 days previously"))
p <- p + labs(y = "Number Cases",
x = "Day")+
theme(legend.position="none")
p1 <- p
p <- ggplot(dat.sht,aes(x=sys.date))
p <- p + geom_line(aes(y=NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = PLUV/10, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day") +
theme(legend.position="none")
p2 <- p
plot_grid(p1,p2)
p <- ggplot(dat,aes(x=lagrain, y=NCASES1))+
geom_point()+geom_smooth()+
labs(y = "Number Cases",
x = "Rain lagged by 10 days")
p1 <- p
p <- ggplot(dat,aes(x=PLUV, y=NCASES1))+
geom_point()+geom_smooth()+
labs(y = "Number Cases",
x = "Rain (unlagged)")
p2 <- p
plot_grid(p1,p2)
dat=read_csv("leptoTimeSeries.csv")
## Look at data
tbl_df(dat)
## Get number of observations per person
dat <- dat%>% mutate(sys.date=dmy(date))
p <- ggplot(dat,aes(x=sys.date))
p <- p + geom_line(aes(y=NCASES1,colour="Cases"),linetype = "dashed")
p <- p+ geom_line(aes(y = PLUV/20, colour = "Rain"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*20, name = "Rainfall"))
p <- p + labs(y = "Number Cases",
x = "Day")
p
dat <- dat %>% mutate(lagrain10 = lag(PLUV,10),lagrain5 = lag(PLUV,5))
dat[1:15,c("sys.date","PLUV","lagrain5","lograin10")]
dat[1:15,c("sys.date","PLUV","lagrain5","lagrain10")]
## Plot lagged rain
p <- ggplot(dat,aes(x=lagrain10, y=NCASES1))+
geom_point()+geom_smooth()+
labs(y = "Number Cases",
x = "Rain lagged by 10 days")
p1 <- p
p <- ggplot(dat,aes(x=lagrain5, y=NCASES1))+
geom_point()+geom_smooth()+
labs(y = "Number Cases",
x = "Rain lagged by 5 days")
p2 <- p
p <- ggplot(dat,aes(x=PLUV, y=NCASES1))+
geom_point()+geom_smooth()+
labs(y = "Number Cases",
x = "Rain (unlagged)")
p3 <- p
plot_grid(p1,p2,p3)
library(cowplot)
??plot_grid
plot_grid(plt.A,plt.Y,plt.regA,plt.tmle,plt.cvr.tmle)
setwd("~/UC Berkeley Biostat Dropbox/Alan Hubbard/hubbardlap/grantproposals/ki Gates/Synthetic data supp/GitSynth/pasc-sim/R")
